// simple_parser.js
const axios = require('axios');
const ExcelJS = require('exceljs');
const fs = require('fs');
const path = require('path');

// –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–µ—Ä –±–µ–∑ Puppeteer
async function simpleParser() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞...');
  
  try {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ API –∏–ª–∏ –ø—Ä—è–º—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    const results = [
      {
        title: '–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è 1',
        text: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏. –ü–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ Puppeteer.',
        url: 'https://dzen.ru/test1'
      },
      {
        title: '–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è 2', 
        text: '–í—Ç–æ—Ä–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è. –ú—ã –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –ø–æ–∑–∂–µ.',
        url: 'https://dzen.ru/test2'
      }
    ];

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Excel
    const wb = new ExcelJS.Workbook();
    const sheet = wb.addWorksheet('Articles');
    sheet.columns = [
      { header: '–ó–∞–≥–æ–ª–æ–≤–æ–∫', key: 'title', width: 50 },
      { header: '–¢–µ–∫—Å—Ç', key: 'text', width: 100 },
      { header: '–°—Å—ã–ª–∫–∞', key: 'url', width: 50 }
    ];
    
    results.forEach(r => sheet.addRow(r));
    
    const outputDir = path.join('/tmp', '–°—Ç–∞—Ç—å–∏ –î–∑–µ–Ω');
    fs.mkdirSync(outputDir, { recursive: true });
    const outFile = path.join(outputDir, 'test_articles.xlsx');
    
    await wb.xlsx.writeFile(outFile);
    console.log(`‚úÖ Excel —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${outFile}`);
    console.log(`üìä –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: ${results.length}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

simpleParser();