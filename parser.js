// parser.js
const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');
const ExcelJS = require('exceljs');

const CHANNEL_NAME = '–ù–∞—Ä–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥—É–º–∞–µ—à—å';
const CHANNEL_URL = 'https://dzen.ru/id/5ae586563dceb76be76eca19?tab=articles';
const MAX_ARTICLES = 5; // –£–º–µ–Ω—å—à–∏–ª –¥–ª—è —Ç–µ—Å—Ç–∞

// –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è –¥–ª—è –ø–∞–ø–∫–∏/—Ñ–∞–π–ª–∞
const safeName = CHANNEL_NAME.replace(/[<>:"/\\|?*]/g, '_');
// –î–ª—è Render –∏—Å–ø–æ–ª—å–∑—É–µ–º /tmp –≤–º–µ—Å—Ç–æ Desktop
const OUTPUT_DIR = path.join('/tmp', '–°—Ç–∞—Ç—å–∏ –î–∑–µ–Ω', safeName);

async function sleep(ms) { return new Promise(r => setTimeout(r, ms)); }

;(async () => {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–≤–æ–µ–≥–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞...');
  
  try {
    fs.mkdirSync(OUTPUT_DIR, { recursive: true });
    console.log('üìÇ –ü–∞–ø–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞:', OUTPUT_DIR);

    // –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è Render
    const browser = await puppeteer.launch({
      headless: true,
      args: [
        '--no-sandbox',
        '--disable-setuid-sandbox',
        '--disable-dev-shm-usage',
        '--disable-accelerated-2d-canvas',
        '--no-first-run',
        '--no-zygote',
        '--single-process',
        '--disable-gpu'
      ]
    });
    
    const page = await browser.newPage();
    
    // –£–ª—É—á—à–µ–Ω–Ω—ã–π User-Agent
    await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36');
    await page.setViewport({ width: 1280, height: 720 });
    
    console.log(`\n--- –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª ${CHANNEL_URL} ---`);
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.goto(CHANNEL_URL, { 
      waitUntil: 'networkidle2', 
      timeout: 30000 
    });
    await sleep(5000);

    // –°–æ–±—Ä–∞—Ç—å —Å—Å—ã–ª–∫–∏, –ø—Ä–æ–∫–ª–∏–∫–∏–≤–∞—è ¬´–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë¬ª
    const linksSet = new Set();
    
    for (let i = 0; i < 3 && linksSet.size < MAX_ARTICLES; i++) {
      console.log(`üîç –ò—Ç–µ—Ä–∞—Ü–∏—è ${i + 1}: –ø–æ–∏—Å–∫ —Å—Å—ã–ª–æ–∫...`);
      
      const hrefs = await page.$$eval(
        'a[data-testid="card-article-title-link"]',
        els => els.map(a => a.href)
      );
      
      hrefs.forEach(h => linksSet.add(h));
      console.log(`üìé –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫: ${linksSet.size}`);
      
      if (linksSet.size >= MAX_ARTICLES) break;
      
      // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É "–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë"
      const moreButton = await page.$('button[data-testid="cards-loadmore-button"]');
      if (!moreButton) {
        console.log('‚ùå –ö–Ω–æ–ø–∫–∞ "–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        break;
      }
      
      console.log('üîÑ –ö–ª–∏–∫–∞–µ–º "–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë"...');
      await moreButton.click();
      await sleep(3000);
    }
    
    const urls = Array.from(linksSet).slice(0, MAX_ARTICLES);
    console.log(`üîó –í—Å–µ–≥–æ —Å—Å—ã–ª–æ–∫ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞: ${urls.length}`);

    const results = [];
    
    // –ü–∞—Ä—Å–∏–º –∫–∞–∂–¥—É—é —Å—Ç–∞—Ç—å—é
    for (const [index, url] of urls.entries()) {
      console.log(`\n‚è¨ [${index + 1}/${urls.length}] –ó–∞–≥—Ä—É–∂–∞–µ–º: ${url}`);
      
      const articlePage = await browser.newPage();
      await articlePage.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36');
      
      try {
        await articlePage.goto(url, {
          waitUntil: 'networkidle2',
          timeout: 30000
        });
        
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        await articlePage.evaluate(() => window.scrollTo(0, document.body.scrollHeight));
        await sleep(2000);

        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const title = await articlePage.evaluate(() => {
          return document.querySelector('h1')?.innerText.trim() ||
            document.querySelector('meta[property="og:title"]')?.content.trim() ||
            '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
        });

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏
        let text = await articlePage.evaluate(() => {
          const sels = ['article p', '[data-zone-name="content"] p', 'main p'];
          let parts = [];
          sels.forEach(sel => {
            document.querySelectorAll(sel).forEach(el => {
              const t = el.innerText.trim();
              if (t) parts.push(t);
            });
          });
          if (parts.length) return parts.join('\n\n');
          return document.querySelector('meta[name="description"]')?.content.trim() || '';
        });

        if (!text || text.length < 50) {
          console.log('‚è≠ –ü—Ä–æ–ø—É—â–µ–Ω–æ ‚Äî —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π');
        } else {
          results.push({ 
            title: title.substring(0, 100),
            text: text.substring(0, 1000), // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞
            url: url 
          });
          console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ:', title.substring(0, 50) + '...');
        }
      } catch (err) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Å—Ç–∞—Ç—å–∏:', err.message);
      }
      
      await articlePage.close();
    }

    await browser.close();

    // –ó–∞–ø–∏—Å—å –≤ Excel
    if (results.length > 0) {
      const wb = new ExcelJS.Workbook();
      const sheet = wb.addWorksheet('Articles');
      sheet.columns = [
        { header: '–ó–∞–≥–æ–ª–æ–≤–æ–∫', key: 'title', width: 50 },
        { header: '–¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏', key: 'text', width: 100 },
        { header: '–°—Å—ã–ª–∫–∞', key: 'url', width: 50 }
      ];
      
      results.forEach(r => sheet.addRow(r));

      const outFile = path.join(OUTPUT_DIR, `${safeName}_articles.xlsx`);
      await wb.xlsx.writeFile(outFile);
      
      console.log(`\nüéâ Excel —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${outFile}`);
      console.log(`üìä –í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${results.length}`);
      
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      const http = require('http');
      const server = http.createServer((req, res) => {
        res.writeHead(200, { 'Content-Type': 'text/html; charset=utf-8' });
        res.end(`
          <!DOCTYPE html>
          <html>
          <head>
            <title>–ü–∞—Ä—Å–µ—Ä –î–∑–µ–Ω - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã</title>
            <meta charset="utf-8">
            <style>
              body { font-family: Arial, sans-serif; max-width: 800px; margin: 40px auto; padding: 20px; }
              .success { color: #28a745; background: #f8fff9; padding: 20px; border-radius: 10px; }
              .article { background: #f8f9fa; padding: 15px; margin: 10px 0; border-radius: 5px; }
            </style>
          </head>
          <body>
            <h1>üéâ –ü–∞—Ä—Å–µ—Ä –î–∑–µ–Ω —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!</h1>
            <div class="success">
              <h3>‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞</h3>
              <p><strong>–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å—Ç–∞—Ç–µ–π:</strong> ${results.length}</p>
              <p><strong>–§–∞–π–ª:</strong> ${outFile}</p>
              <p><strong>–ö–∞–Ω–∞–ª:</strong> ${CHANNEL_NAME}</p>
            </div>
            
            <h2>üìÑ –°–æ–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏:</h2>
            ${results.map((article, index) => `
              <div class="article">
                <h3>${index + 1}. ${article.title}</h3>
                <p>${article.text.substring(0, 200)}...</p>
                <a href="${article.url}" target="_blank">–û—Ç–∫—Ä—ã—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª</a>
              </div>
            `).join('')}
            
            <hr>
            <p><small>–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${new Date().toLocaleString('ru-RU')}</small></p>
          </body>
          </html>
        `);
      });
      
      server.listen(process.env.PORT || 3000, () => {
        console.log(`üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${process.env.PORT || 3000}`);
        console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É');
      });
      
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å —Å—Ç–∞—Ç—å–∏');
      process.exit(1);
    }

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
})();