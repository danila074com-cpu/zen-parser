// server.js
const express = require('express');
const axios = require('axios');
const https = require('https');
const ExcelJS = require('exceljs');
const fs = require('fs');
const path = require('path');

const app = express();
const port = process.env.PORT || 3000;

// –ê–≥–µ–Ω—Ç –¥–ª—è –æ–±—Ö–æ–¥–∞ SSL –ø—Ä–æ–≤–µ—Ä–æ–∫
const agent = new https.Agent({
  rejectUnauthorized: false
});

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –∑–∞—â–∏—Ç—ã
function createAdvancedHeaders() {
  const userAgents = [
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/121.0',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
  ];
  
  return {
    'User-Agent': userAgents[Math.floor(Math.random() * userAgents.length)],
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
    'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
    'Accept-Encoding': 'gzip, deflate, br',
    'Cache-Control': 'no-cache',
    'Pragma': 'no-cache',
    'Sec-Ch-Ua': '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"',
    'Sec-Ch-Ua-Mobile': '?0',
    'Sec-Ch-Ua-Platform': '"Windows"',
    'Sec-Fetch-Dest': 'document',
    'Sec-Fetch-Mode': 'navigate',
    'Sec-Fetch-Site': 'none',
    'Upgrade-Insecure-Requests': '1'
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

// –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
async function aggressiveParse() {
  console.log('üî• –ó–∞–ø—É—Å–∫ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞...');
  
  try {
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ URL –∏ –ø–æ–¥—Ö–æ–¥—ã
    const targets = [
      {
        url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
        method: 'direct'
      },
      {
        url: 'https://dzen.ru/apis/launcher/v3/export?channel_id=5ae586563dceb76be76eca19',
        method: 'api'
      },
      {
        url: 'https://dzen.ru/news/rubric?channel_id=5ae586563dceb76be76eca19',
        method: 'news'
      }
    ];
    
    for (const target of targets) {
      console.log(`üéØ –ü—Ä–æ–±—É–µ–º: ${target.url}`);
      
      try {
        const response = await axios.get(target.url, {
          headers: createAdvancedHeaders(),
          httpsAgent: agent,
          timeout: 20000,
          maxRedirects: 5,
          validateStatus: function (status) {
            return status >= 200 && status < 600; // –ü—Ä–∏–Ω–∏–º–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã
          }
        });
        
        console.log(`üì° –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: ${response.status}`);
        
        if (response.status === 200 && response.data) {
          const parsedData = parseResponseData(response.data, target.method);
          if (parsedData && parsedData.length > 0) {
            console.log(`‚úÖ –£—Å–ø–µ—Ö —á–µ—Ä–µ–∑ ${target.method}: ${parsedData.length} —Å—Ç–∞—Ç–µ–π`);
            return parsedData;
          }
        }
        
        await delay(2000); // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
        
      } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${target.url}: ${error.message}`);
        await delay(1000);
      }
    }
    
    return null;
    
  } catch (error) {
    console.log('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error.message);
    return null;
  }
}

// –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–µ—Ç–æ–¥–∞
function parseResponseData(data, method) {
  const results = [];
  
  try {
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö
    if (typeof data === 'string') {
      // HTML –ø–∞—Ä—Å–∏–Ω–≥
      const titleMatch = data.match(/<title[^>]*>([^<]+)<\/title>/i);
      const metaDescMatch = data.match(/<meta[^>]*name="description"[^>]*content="([^"]*)"/i);
      const h1Match = data.match(/<h1[^>]*>([^<]+)<\/h1>/i);
      
      if (titleMatch && titleMatch[1]) {
        results.push({
          title: cleanText(titleMatch[1]),
          text: metaDescMatch ? cleanText(metaDescMatch[1]) : '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
          url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
          source: 'HTML –ø–∞—Ä—Å–∏–Ω–≥'
        });
      }
      
      // –ü–æ–∏—Å–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const jsonLdMatches = data.match(/<script[^>]*type="application\/ld\+json"[^>]*>([\s\S]*?)<\/script>/gi);
      if (jsonLdMatches) {
        jsonLdMatches.forEach(script => {
          try {
            const jsonStr = script.replace(/<script[^>]*>/, '').replace(/<\/script>/, '');
            const jsonData = JSON.parse(jsonStr);
            if (jsonData.headline || jsonData.name) {
              results.push({
                title: cleanText(jsonData.headline || jsonData.name),
                text: cleanText(jsonData.description || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'),
                url: jsonData.url || 'https://dzen.ru/id/5ae586563dceb76be76eca19',
                source: 'JSON-LD'
              });
            }
          } catch (e) {
            // –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON
          }
        });
      }
    } else if (typeof data === 'object') {
      // JSON –ø–∞—Ä—Å–∏–Ω–≥
      if (data.items && Array.isArray(data.items)) {
        data.items.forEach(item => {
          if (item.title || item.text) {
            results.push({
              title: cleanText(item.title || item.text.substring(0, 100)),
              text: cleanText(item.description || item.text || '–¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'),
              url: item.url || item.link || 'https://dzen.ru/id/5ae586563dceb76be76eca19',
              source: 'JSON API'
            });
          }
        });
      }
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞:', error.message);
  }
  
  return results;
}

// –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
function cleanText(text) {
  return text ? text.replace(/<[^>]*>/g, '').replace(/\s+/g, ' ').trim().substring(0, 500) : '';
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞
async function parseArticles() {
  console.log('üî• –ó–ê–ü–£–°–ö –ê–ì–†–ï–°–°–ò–í–ù–û–ì–û –ü–ê–†–°–ò–ù–ì–ê –î–ó–ï–ù...');
  
  let results = await aggressiveParse();
  
  // –ï—Å–ª–∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
  if (!results || results.length === 0) {
    console.log('üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
    results = [
      {
        title: '–ù–∞—Ä–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥—É–º–∞–µ—à—å: –°–º–µ—à–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ –∂–∏–∑–Ω–∏',
        text: '–°–≤–µ–∂–∏–π —é–º–æ—Ä –∏ –∑–∞–±–∞–≤–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏. –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏!',
        url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
        source: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–∞—Ä—Å–∏–Ω–≥ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è)'
      },
      {
        title: '–Æ–º–æ—Ä –¥–Ω—è –æ—Ç –ù–∞—Ä–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥—É–º–∞–µ—à—å',
        text: '–õ—É—á—à–∏–µ —à—É—Ç–∫–∏ –∏ —Å–º–µ—à–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã. –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.',
        url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
        source: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'
      },
      {
        title: '–°–∞—Ç–∏—Ä–∞ –∏ –∏—Ä–æ–Ω–∏—è –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ',
        text: '–û—Å—Ç—Ä–æ—É–º–Ω—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ—Å—Ç—å—é. –Æ–º–æ—Ä –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è.',
        url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
        source: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'
      },
      {
        title: '–õ—É—á—à–∏–µ –º–æ–º–µ–Ω—Ç—ã –∫–∞–Ω–∞–ª–∞ –∑–∞ –Ω–µ–¥–µ–ª—é',
        text: '–ü–æ–¥–±–æ—Ä–∫–∞ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –∏ —Ä–µ–∞–∫—Ü–∏–π –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.',
        url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
        source: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'
      },
      {
        title: '–ù–æ–≤—ã–µ —Ç—Ä–µ–Ω–¥—ã –≤ —é–º–æ—Ä–µ 2025',
        text: '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º —é–º–æ—Ä–µ.',
        url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
        source: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'
      }
    ];
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel
  const wb = new ExcelJS.Workbook();
  const sheet = wb.addWorksheet('–°—Ç–∞—Ç—å–∏ –î–∑–µ–Ω');
  sheet.columns = [
    { header: '–ó–∞–≥–æ–ª–æ–≤–æ–∫', key: 'title', width: 45 },
    { header: '–¢–µ–∫—Å—Ç', key: 'text', width: 70 },
    { header: '–°—Å—ã–ª–∫–∞', key: 'url', width: 35 },
    { header: '–ò—Å—Ç–æ—á–Ω–∏–∫', key: 'source', width: 25 }
  ];
  
  results.forEach(row => sheet.addRow(row));
  
  const outputDir = path.join('/tmp', 'zen_articles');
  fs.mkdirSync(outputDir, { recursive: true });
  const excelPath = path.join(outputDir, 'articles.xlsx');
  
  await wb.xlsx.writeFile(excelPath);
  
  console.log(`üéØ –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${results.length} —Å—Ç–∞—Ç–µ–π`);
  
  const isRealData = !results[0]?.source.includes('–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  
  return { 
    success: true, 
    count: results.length, 
    filePath: excelPath,
    source: results[0]?.source || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
    isRealData: isRealData,
    message: isRealData ? 
      'üî• –†–ï–ê–õ–¨–ù–´–ô –ü–ê–†–°–ò–ù–ì –£–°–ü–ï–®–ï–ù!' : 
      'üõ°Ô∏è –ü–∞—Ä—Å–∏–Ω–≥ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –∑–∞—â–∏—Ç–æ–π –î–∑–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.'
  };
}

// –ú–∞—Ä—à—Ä—É—Ç—ã
app.get('/', async (req, res) => {
  const parseResult = await parseArticles();
  
  const statusClass = parseResult.isRealData ? 'success' : 'warning';
  const statusTitle = parseResult.isRealData ? 'üî• –†–ï–ê–õ–¨–ù–´–ô –ü–ê–†–°–ò–ù–ì' : 'üõ°Ô∏è –ó–ê–©–ò–¢–ê –û–ë–ù–ê–†–£–ñ–ï–ù–ê';
  const statusIcon = parseResult.isRealData ? '‚úÖ' : '‚ö†Ô∏è';
  
  res.send(`
    <!DOCTYPE html>
    <html>
    <head>
      <title>–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –ü–∞—Ä—Å–µ—Ä –î–∑–µ–Ω</title>
      <meta charset="utf-8">
      <style>
        body { 
          font-family: 'Segoe UI', Arial, sans-serif; 
          max-width: 900px; 
          margin: 40px auto; 
          padding: 20px;
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          color: #333;
        }
        .container {
          background: white;
          border-radius: 15px;
          padding: 30px;
          box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }
        .success { 
          color: #28a745; 
          background: #f8fff9; 
          padding: 25px; 
          border-radius: 10px; 
          border-left: 6px solid #28a745;
          margin: 20px 0;
        }
        .warning { 
          color: #856404; 
          background: #fffef0; 
          padding: 25px; 
          border-radius: 10px; 
          border-left: 6px solid #ffc107;
          margin: 20px 0;
        }
        .stats { 
          display: grid; 
          grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); 
          gap: 15px; 
          margin: 20px 0; 
        }
        .stat { 
          background: white; 
          padding: 15px; 
          border-radius: 8px; 
          text-align: center;
          box-shadow: 0 2px 5px rgba(0,0,0,0.1);
          border: 1px solid #e0e0e0;
        }
        .stat strong {
          font-size: 24px;
          color: #667eea;
          display: block;
        }
        .btn {
          display: inline-block;
          padding: 12px 25px;
          margin: 10px 5px;
          background: #667eea;
          color: white;
          text-decoration: none;
          border-radius: 8px;
          font-weight: bold;
          transition: all 0.3s;
        }
        .btn:hover {
          background: #764ba2;
          transform: translateY(-2px);
        }
        .info-box {
          background: #f8f9fa;
          padding: 20px;
          border-radius: 8px;
          margin: 25px 0;
          border-left: 4px solid #667eea;
        }
      </style>
    </head>
    <body>
      <div class="container">
        <h1 style="text-align: center; color: #333; margin-bottom: 10px;">üéØ –≠–ö–°–ü–ï–†–¢–ù–´–ô –ü–ê–†–°–ï–† –î–ó–ï–ù</h1>
        <p style="text-align: center; color: #666; margin-bottom: 30px;">"–ù–∞—Ä–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥—É–º–∞–µ—à—å"</p>
        
        <div class="${statusClass}">
          <h2 style="margin-top: 0;">${statusIcon} ${statusTitle}</h2>
          <div class="stats">
            <div class="stat">
              <strong>${parseResult.count}</strong>
              —Å—Ç–∞—Ç–µ–π —Å–æ–±—Ä–∞–Ω–æ
            </div>
            <div class="stat">
              <strong>${parseResult.source}</strong>
              –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
            </div>
            <div class="stat">
              <strong>${parseResult.isRealData ? '–†–ï–ê–õ–¨–ù–´–ï' : '–¢–ï–°–¢–û–í–´–ï'}</strong>
              —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
            </div>
          </div>
          <p style="font-size: 16px; margin: 15px 0;"><strong>${parseResult.message}</strong></p>
        </div>
        
        <div class="info-box">
          <h3>üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã:</h3>
          <ul>
            <li>–û–±—Ö–æ–¥ Cloudflare –∑–∞—â–∏—Ç—ã</li>
            <li>–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ User-Agents</li>
            <li>–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ü–µ–ª–µ–≤—ã–µ URL</li>
            <li>–ü–∞—Ä—Å–∏–Ω–≥ JSON-LD –¥–∞–Ω–Ω—ã—Ö</li>
            <li>SSL bypass –º–µ—Ç–æ–¥—ã</li>
          </ul>
          <p><strong>–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</strong> ${new Date().toLocaleString('ru-RU')}</p>
        </div>
        
        <div style="text-align: center; margin-top: 30px;">
          <a href="/download" class="btn">üì• –°–∫–∞—á–∞—Ç—å Excel —Ñ–∞–π–ª</a>
          <a href="/" class="btn" style="background: #28a745;">üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</a>
        </div>
      </div>
    </body>
    </html>
  `);
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
app.get('/download', (req, res) => {
  const filePath = path.join('/tmp', 'zen_articles', 'articles.xlsx');
  
  if (fs.existsSync(filePath)) {
    res.download(filePath, '—Å—Ç–∞—Ç—å–∏_–¥–∑–µ–Ω_–Ω–∞—Ä–æ—á–Ω–æ_–Ω–µ_–ø—Ä–∏–¥—É–º–∞–µ—à—å.xlsx', (err) => {
      if (err) {
        console.log('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', err);
        res.send('–§–∞–π–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
    });
  } else {
    res.send('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–µ—Ä –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.');
  }
});

app.listen(port, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
  console.log('üî• –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –î–∑–µ–Ω –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
});