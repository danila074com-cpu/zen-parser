// server.js
const express = require('express');
const axios = require('axios');
const cheerio = require('cheerio');
const ExcelJS = require('exceljs');
const fs = require('fs');
const path = require('path');

const app = express();
const port = process.env.PORT || 3000;

// –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
async function simpleRealParse() {
  console.log('üîç –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥...');
  
  try {
    // –ü—Ä–æ–±—É–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é –∏–ª–∏ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    const response = await axios.get('https://dzen.ru/id/5ae586563dceb76be76eca19', {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Linux; Android 10; SM-G973F) AppleWebKit/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3',
        'Cache-Control': 'no-cache',
        'Pragma': 'no-cache'
      },
      timeout: 15000
    });
    
    const $ = cheerio.load(response.data);
    const results = [];
    
    // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ - –∏—â–µ–º –ª—é–±—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Ç–µ–∫—Å—Ç
    $('h1, h2, h3, h4, [class*="title"], [class*="header"]').each((i, element) => {
      if (results.length >= 5) return false;
      
      const $el = $(element);
      const title = $el.text().trim();
      const $parent = $el.closest('article, div, section');
      const text = $parent.find('p, span, div').first().text().trim();
      
      if (title && title.length > 10 && text && text.length > 20) {
        results.push({
          title: title.substring(0, 100),
          text: text.substring(0, 300),
          url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
          source: '–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥'
        });
      }
    });
    
    if (results.length > 0) {
      console.log(`‚úÖ –†–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —É—Å–ø–µ—à–µ–Ω: ${results.length} —Å—Ç–∞—Ç–µ–π`);
      return results;
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
    return await alternativeParse();
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error.message);
    return await alternativeParse();
  }
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥–∞
async function alternativeParse() {
  try {
    console.log('üîç –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥...');
    
    // –ü—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ –ø–æ–¥—Ö–æ–¥—ã –∫ –ø–∞—Ä—Å–∏–Ω–≥—É
    const results = [];
    
    // –ú–µ—Ç–æ–¥ 1: –ü–æ–∏—Å–∫ –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º
    const response = await axios.get('https://dzen.ru/id/5ae586563dceb76be76eca19', {
      timeout: 10000
    });
    
    const $ = cheerio.load(response.data);
    
    // –ò—â–µ–º JSON-LD —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    $('script[type="application/ld+json"]').each((i, element) => {
      try {
        const jsonData = JSON.parse($(element).html());
        if (jsonData.headline && jsonData.description) {
          results.push({
            title: jsonData.headline,
            text: jsonData.description,
            url: jsonData.url || 'https://dzen.ru/id/5ae586563dceb76be76eca19',
            source: 'JSON-LD –¥–∞–Ω–Ω—ã–µ'
          });
        }
      } catch (e) {
        // –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
      }
    });
    
    if (results.length > 0) return results;
    
    // –ú–µ—Ç–æ–¥ 2: –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    $('article, .content, .post, .item').each((i, element) => {
      if (results.length >= 3) return false;
      
      const $el = $(element);
      const title = $el.find('h1, h2, h3, .title, .header').first().text().trim();
      const text = $el.find('p, .text, .content, .description').first().text().trim();
      
      if (title && text && title.length > 5) {
        results.push({
          title: title.substring(0, 120),
          text: text.substring(0, 400),
          url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
          source: '–ü—Ä—è–º–æ–π –ø–∞—Ä—Å–∏–Ω–≥'
        });
      }
    });
    
    return results.length > 0 ? results : null;
    
  } catch (error) {
    console.log('‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', error.message);
    return null;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞
async function parseArticles() {
  console.log('üîç –ó–∞–ø—É—Å–∫ –†–ï–ê–õ–¨–ù–û–ì–û –ø–∞—Ä—Å–∏–Ω–≥–∞ –î–∑–µ–Ω...');
  
  let results = await simpleRealParse();
  
  // –ï—Å–ª–∏ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  if (!results || results.length === 0) {
    console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
    results = [
      {
        title: '–ù–∞—Ä–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥—É–º–∞–µ—à—å - –°–≤–µ–∂–∏–π —é–º–æ—Ä',
        text: '–ù–æ–≤—ã–µ —Å–º–µ—à–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏ –∑–∞–±–∞–≤–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –∏–∑ –∂–∏–∑–Ω–∏. –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ª—É—á—à–µ–µ!',
        url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
        source: '–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)'
      },
      {
        title: '–õ—É—á—à–∏–µ –º–æ–º–µ–Ω—Ç—ã –Ω–µ–¥–µ–ª–∏',
        text: '–ü–æ–¥–±–æ—Ä–∫–∞ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –∏ —Ä–µ–∞–∫—Ü–∏–π –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏.',
        url: 'https://dzen.ru/id/5ae586563dceb76be76eca19', 
        source: '–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ'
      },
      {
        title: '–Æ–º–æ—Ä –∏ —Å–∞—Ç–∏—Ä–∞ –æ—Ç –ù–∞—Ä–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥—É–º–∞–µ—à—å',
        text: '–û—Å—Ç—Ä–æ—É–º–Ω—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω—å—é. –Æ–º–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–Ω–∏–º–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.',
        url: 'https://dzen.ru/id/5ae586563dceb76be76eca19',
        source: '–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ'
      }
    ];
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel
  const wb = new ExcelJS.Workbook();
  const sheet = wb.addWorksheet('–°—Ç–∞—Ç—å–∏ –î–∑–µ–Ω');
  sheet.columns = [
    { header: '–ó–∞–≥–æ–ª–æ–≤–æ–∫', key: 'title', width: 40 },
    { header: '–¢–µ–∫—Å—Ç', key: 'text', width: 60 },
    { header: '–°—Å—ã–ª–∫–∞', key: 'url', width: 30 },
    { header: '–ò—Å—Ç–æ—á–Ω–∏–∫', key: 'source', width: 25 }
  ];
  
  results.forEach(row => sheet.addRow(row));
  
  const outputDir = path.join('/tmp', 'zen_articles');
  fs.mkdirSync(outputDir, { recursive: true });
  const excelPath = path.join(outputDir, 'articles.xlsx');
  
  await wb.xlsx.writeFile(excelPath);
  
  console.log(`‚úÖ –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${results.length} —Å—Ç–∞—Ç–µ–π`);
  return { 
    success: true, 
    count: results.length, 
    filePath: excelPath,
    source: results[0]?.source || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
    isRealData: results[0]?.source !== '–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ',
    message: results[0]?.source.includes('–¢–µ—Å—Ç–æ–≤—ã–µ') ? 
      '–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è)' : 
      '–†–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —É—Å–ø–µ—à–µ–Ω!'
  };
}

// –ú–∞—Ä—à—Ä—É—Ç—ã
app.get('/', async (req, res) => {
  const parseResult = await parseArticles();
  
  const statusClass = parseResult.isRealData ? 'success' : 'warning';
  const statusTitle = parseResult.isRealData ? '‚úÖ –†–ï–ê–õ–¨–ù–´–ô –ü–ê–†–°–ò–ù–ì' : '‚ö†Ô∏è –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú';
  
  res.send(`
    <!DOCTYPE html>
    <html>
    <head>
      <title>–ü–∞—Ä—Å–µ—Ä –î–∑–µ–Ω</title>
      <meta charset="utf-8">
      <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 40px auto; padding: 20px; }
        .success { color: #28a745; background: #f8fff9; padding: 20px; border-radius: 8px; border-left: 4px solid #28a745; }
        .warning { color: #856404; background: #fffef0; padding: 20px; border-radius: 8px; border-left: 4px solid #ffc107; }
        .info { background: #f0f8ff; padding: 15px; border-radius: 5px; margin: 20px 0; }
        .stats { display: grid; grid-template-columns: 1fr 1fr; gap: 10px; margin: 15px 0; }
        .stat { background: white; padding: 10px; border-radius: 5px; text-align: center; }
      </style>
    </head>
    <body>
      <h1>üéØ –ü–∞—Ä—Å–µ—Ä —Å—Ç–∞—Ç–µ–π –î–∑–µ–Ω "–ù–∞—Ä–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥—É–º–∞–µ—à—å"</h1>
      
      <div class="${statusClass}">
        <h2>${statusTitle}</h2>
        <div class="stats">
          <div class="stat">
            <strong>${parseResult.count}</strong><br>—Å—Ç–∞—Ç–µ–π —Å–æ–±—Ä–∞–Ω–æ
          </div>
          <div class="stat">
            <strong>${parseResult.source}</strong><br>–∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
          </div>
        </div>
        <p>${parseResult.message}</p>
      </div>
      
      <div class="info">
        <h3>üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏:</h3>
        <p>–ü–∞—Ä—Å–µ—Ä –ø—Ä–æ–±—É–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã:</p>
        <ul>
          <li>–£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ HTTP –∑–∞–ø—Ä–æ—Å—ã</li>
          <li>–ü–∞—Ä—Å–∏–Ω–≥ JSON-LD —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</li>
          <li>–ü–æ–∏—Å–∫ –ø–æ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–µ</li>
          <li>–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∞–π—Ç–∞</li>
        </ul>
        <p><strong>–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</strong> ${new Date().toLocaleString('ru-RU')}</p>
      </div>
      
      <hr>
      <p>
        <a href="/download" style="background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; display: inline-block;">
          üì• –°–∫–∞—á–∞—Ç—å Excel —Ñ–∞–π–ª
        </a>
        <a href="/" style="margin-left: 10px; padding: 10px 20px; text-decoration: none; border: 1px solid #007bff; border-radius: 5px; display: inline-block;">
          üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
        </a>
      </p>
    </body>
    </html>
  `);
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
app.get('/download', (req, res) => {
  const filePath = path.join('/tmp', 'zen_articles', 'articles.xlsx');
  
  if (fs.existsSync(filePath)) {
    res.download(filePath, '—Å—Ç–∞—Ç—å–∏_–¥–∑–µ–Ω_–Ω–∞—Ä–æ—á–Ω–æ_–Ω–µ_–ø—Ä–∏–¥—É–º–∞–µ—à—å.xlsx', (err) => {
      if (err) {
        console.log('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', err);
        res.send('–§–∞–π–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
    });
  } else {
    res.send('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–µ—Ä –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.');
  }
});

app.listen(port, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
  console.log('üéØ –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –î–∑–µ–Ω –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
});